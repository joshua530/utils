Array.forEach(function(current)) -> executes function for each element in the array. Does not return anything
Array.filter(function(current) => bool)
    -> filters items and returns array of items that make the function return true
Array.map(function(current)=>any)
    -> applies function to each element and returns array of values that have been returned by the function
Array.sort(function(a,b)=>{1,>1,<1})
    -> by default(without comparative function), it sorts the items as strings
    -> if function is given, the items are compared two at a time(1=equal, <1=a is less than b, >1=a is greater than b)
Array.reduce(function(total,current))
    -> 'reduces' an array to a single value(eg get the total of all items in a numbers array)

Promise.resolve
Promise.reject
Promise.all
Promise.then
Promise.catch
new Promise((resolve,reject)=>{})

async function asyncFuncName(...args){}
await asyncFuncName()

fetch() returns a promise

for (let x of iterable) -> iterates over items in iterable
for (let x in iterable) -> iterates over indices of iterable
